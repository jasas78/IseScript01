all:

ERRmsgAnalyzeIseTEXT:= analyze need those VARS.
$(eval $(call testVARmustExist,AnalyzeIseTopXise,ERRmsgAnalyzeIseTEXT))

$(shell [ -d ana ] || mkdir ana)

anaTopIse:=$(AnalyzeIseTopDir)/$(AnalyzeIseTopXise)

iseAnalyzeFileset00:=ana/ana.ise.fileset00.resort.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset01:=ana/ana.ise.fileset01.all.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset02:=ana/ana.ise.fileset02.verilog.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset03:=ana/ana.ise.fileset03.testbenchVerilog.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset04:=ana/ana.ise.fileset04.config.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset05:=ana/ana.ise.fileset05.rtlTopModuleName.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset06:=ana/ana.ise.fileset06.ucf.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset07:=ana/ana.ise.fileset07.xaw.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset08:=ana/ana.ise.fileset08.xise.$(AnalyzeIseTopXise).txt

iseSED000:=\
		|dos2unix \
		|tr -d '\r\n' \
		|sed \
		-e 's;  *; ;g' \
		-e 's;> <association;><association;g' \
		-e 's;> </file;></file;g' \
		-e 's;> <;>\n<;g' \
		|dos2unix 
iseSED010:= |grep 'file xil_pn:name=' 
iseSED020:= |grep    '"FILE_VERILOG"' |grep -v '"PostMapSimulation"'
iseSED040:= |grep -v '"FILE_VERILOG"' 
iseSED030:= |grep '"PostMapSimulation"'
iseSED100:= \
		|sed \
		-e 's;^.*file xil_pn:name=\";;g' 		\
		-e 's;\".*$$;;g' 
iseSED105:= \
		|sed \
		-e 's;^.*|;;g' 		\
		-e 's;\".*$$;;g' 

iseSED050:= |grep '"Implementation Top"'
iseSED060:= |grep '"FILE_UCF"'
iseSED070:= |grep '"FILE_XAW"'
iseSED080:= |grep '"FILE_COREGENISE"'

an1:=iseAnalyzeFileset01
an1:
	cat $(anaTopIse) \
		$(iseSED000) \
		> $(iseAnalyzeFileset00)
	cat $(iseAnalyzeFileset00) \
		$(iseSED010) \
		> $(iseAnalyzeFileset01)
	@
	cat $(iseAnalyzeFileset01) \
		$(iseSED020) \
		> $(iseAnalyzeFileset02)
	cat $(iseAnalyzeFileset01) \
		$(iseSED040) \
		> $(iseAnalyzeFileset04)
	cat $(iseAnalyzeFileset01) \
		$(iseSED030) \
		> $(iseAnalyzeFileset03)
	cat $(iseAnalyzeFileset00) \
		$(iseSED050) \
		> $(iseAnalyzeFileset05)
	cat $(iseAnalyzeFileset00) \
		$(iseSED060) \
		> $(iseAnalyzeFileset06)
	cat $(iseAnalyzeFileset00) \
		$(iseSED070) \
		> $(iseAnalyzeFileset07)
	cat $(iseAnalyzeFileset00) \
		$(iseSED080) \
		> $(iseAnalyzeFileset08)
	@
	$(foreach aa1,\
		iseAnalyzeFileset02 \
		iseAnalyzeFileset03 \
		iseAnalyzeFileset04 \
		iseAnalyzeFileset06 \
		iseAnalyzeFileset07 \
		iseAnalyzeFileset08 \
		,cat $($(aa1)) \
		$(iseSED100) \
		> $($(aa1)).2 $(EOL))
	cat $(iseAnalyzeFileset05) \
		$(iseSED105) \
		> $(iseAnalyzeFileset05).2
	@
	@wc ana/ana.ise.*.txt*

RTLtopName:=$(strip $(shell [ -f $(iseAnalyzeFileset05).2 ] && cat $(iseAnalyzeFileset05).2))
ifdef RTLtopName
ifneq ($(topModule),$(RTLtopName))
$(info )$(info 'not equal topModule<$(topModule)>, RTLtopName<$(RTLtopName)>')$(info )$(error )
endif
endif

iseRTLverilogListFile=$(iseAnalyzeFileset02).2
$(iseRTLverilogListFile):
	make an1

an2:=link_the_origin_verilog_to_src8_ipcore_to_src2
$(an2):=verilog_RTL
an2: $(iseRTLverilogListFile)
	@cd src8/ && ln -s $(foreach aa1,$(filter-out $(AnalyzeIseExcludeVerilog),$(shell cat $(iseRTLverilogListFile))),../$(AnalyzeIseTopDir)/$(aa1)) ./
	@ls src8/*.v|wc
	@wc ana/ana.ise.*.txt

an3:=link_the_origin_UCF_to_src8_ipcore_to_src2
$(an3):= UCF
an3: $(iseRTLverilogListFile)
	@cd src3/ && ln -s $(foreach aa1,$(shell cat $(iseAnalyzeFileset06).2 ),../$(AnalyzeIseTopDir)/$(aa1)) ./

an4:=link_the_origin_XAW_to_src8_ipcore_to_src2
$(an4):= XAW
an4: $(iseRTLverilogListFile)
	cd src4/ && ln -s $(foreach aa1,$(shell cat $(iseAnalyzeFileset07).2 ), $(patsubst %.xaw,%.v,../$(AnalyzeIseTopDir)/$(aa1)) ../$(AnalyzeIseTopDir)/$(aa1)) ./

an5:=link_the_origin_XISE_to_src8_ipcore_to_src2
$(an5):= XISE
an5: $(iseRTLverilogListFile)
ifdef coreGenRomList
	$(foreach aa1,$(coreGenRomList),\
		@echo;echo '$(aa1) -> $($(aa1))  <<< === $@ parameter , from Makefile.env : you may do : make an5 ipcore_dir/ROM.xise=XXXyyy ' ;echo; \
		$(EOL)\
		$(eval aa2:=$(shell basename $(aa1)))\
		$(eval aa3:=$(shell realpath src5/$(aa2)))\
		mkdir -p $(aa3) ;$(EOL) \
		make \
		coreGen \
		-f $(TM)/Makefile.3801.runAlone.coreGen \
		-C $(aa3) \
		cgROMname=$$(realpath nowX/$(aa1)) \
		cgROMcontent=$$(realpath $($(aa1))) \
		$(EOL)\
		echo; md5sum $$(realpath $($(aa1))) ; echo \
		$(EOL)\
		)
	@echo
endif
	cd src5/ && ln -s $(foreach aa1,$(filter-out $(coreGenRomList),$(shell cat $(iseAnalyzeFileset08).2 )), $(patsubst %.xise,%.v 	, ../$(AnalyzeIseTopDir)/$(aa1))  ) ./
	cd src5/ && ln -s $(foreach aa1,$(filter-out $(coreGenRomList),$(shell cat $(iseAnalyzeFileset08).2 )), $(patsubst %.xise,%.ngc , ../$(AnalyzeIseTopDir)/$(aa1))  ) ./



cann:=clean_analyze_results
cann:
	$(foreach aa1,ana \
		src2 src3 src4 src5 src8, \
		[ -d $(aa1) ] || mkdir $(aa1) $(EOL) )
	rm -f ana/ana.ise.*.txt*
	rm -f $(foreach aa1,\
		src2 src3 src4 src5 src8, \
		$(foreach aa2,\
		\
		*.v \
		*.xaw \
		*.ucf \
		*.ngc \
		,\
		$(aa1)/$(aa2)) )
	rm -fr src?/*.xise

ann:=analyze_ise_all
$(ann):= cann an1 an2 an3 an4 an5
ann: $($(ann))

showRunHelpList +=  $($(ann)) ann

