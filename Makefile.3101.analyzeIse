all:

ERRmsgAnalyzeIseTEXT:= analyze need those VARS.
$(eval $(call testVARmustExist,AnalyzeIseTopXise,ERRmsgAnalyzeIseTEXT))

$(shell [ -d ana ] || mkdir ana)

anaTopIse:=$(AnalyzeIseTopDir)/$(AnalyzeIseTopXise)

iseAnalyzeFileset00:=ana/ana.ise.fileset00.resort.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset01:=ana/ana.ise.fileset01.all.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset02:=ana/ana.ise.fileset02.verilog.$(AnalyzeIseTopXise).txt
iseAnalyzeFileset03:=ana/ana.ise.fileset03.config.$(AnalyzeIseTopXise).txt

an1:=iseAnalyzeFileset01
an1:
	cat $(anaTopIse) \
		|dos2unix \
		|tr -d '\r\n' \
		|sed \
		-e 's;  *; ;g' \
		-e 's;> <association;><association;g' \
		-e 's;> </file;></file;g' \
		-e 's;> <;>\n<;g' \
		|dos2unix \
		> $(iseAnalyzeFileset00)
	cat $(iseAnalyzeFileset00) \
		|grep 'file xil_pn:name=' \
		> $(iseAnalyzeFileset01)
	cat $(iseAnalyzeFileset01) \
		|grep    '\.v$$' \
		> $(iseAnalyzeFileset02);echo -n 
	cat $(iseAnalyzeFileset01) \
		|grep -v '\.v$$' \
		> $(iseAnalyzeFileset03);echo -n 
	@wc ana/ana.ise.*.txt
#		|sed \
#		-e 's;^.*xil_pn:name=\";;g' 		\
#		-e 's;\".*$$;;g' \

$(iseAnalyzeFileset01):
	make an1

an2:=link_the_origin_verilog_to_src8
an2: $(iseAnalyzeFileset01)
	[ -d src8 ] || mkdir -p src8
	rm -f src8/*.v
	@cd src8/ && ln -s $(foreach aa1,$(filter-out $(AnalyzeIseExcludeVerilog),$(shell cat $(iseAnalyzeFileset02))),$(AnalyzeIseTopDir)/$(aa1)) ./
	@ls src8/*.v|wc
	@wc ana/ana.ise.*.txt


cana:=clean_analyze_results
cana:
	rm -f ana/ana.ise.*.txt

showRunHelpList +=  cana an1 an2

