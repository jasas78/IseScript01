all:

#$(NFTbin)     
# nf1_TEXT
# Makefile.5000
# Makefile.5001

NFTdebug:=111


my_tbLocalIpv4_chainALL :=   \
_11_checkDstIp               \
_13_checkSrcIp               \
_15_checkProtocol_tcp        \
_16_checkTcpDstPortNew       \
_17_checkProtocol_udp        \
_18_checkUdpDstPort          \
_21_checkProtocol_icmp       \
_23_unknown                  \

#$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_11_checkDstIp  ip daddr 224.0.0.0/8 $(NFTcnt) drop
ip4inRuleAA1=$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)$(1) $(2)
ip4inRule111=$(EOL)add rule ip tbLocalIpv4                      $(1) $(2)


define nf31_TEXT

add table ip tbLocalIpv4         


# add my_tbLocalIpv4_chainALL : begin
$(foreach aa1,$(NFTgroupCard_x_ALL),\
$(foreach aa2,$(my_tbLocalIpv4_chainALL),\
$(EOL)add chain ip tbLocalIpv4 chLocalIp4Card_$(aa1)$(aa2)\
))

# add my_tbLocalIpv4_chainALL : end

add chain ip tbLocalIpv4 chLocalIp4input    { type filter hook input   priority 0 ; policy accept ; }


add chain ip tbLocalIpv4 chLocalIp4forward  { type filter hook forward priority 0 ; policy accept ; }
add chain ip tbLocalIpv4 chLocalIp4output   { type filter hook output  priority 0 ; policy accept ; }


add table ip tbNatIpv4         
add chain ip tbNatIpv4         chLocalIp4prerouting     { type filter hook prerouting    priority 0 ; policy accept ; }
add chain ip tbNatIpv4         chLocalIp4postrouting    { type filter hook postrouting   priority 0 ; policy accept ; }


### ruleS begin :

$(foreach aa1,$(NFTgroupCard_x_ALL),$(foreach aa2,$(NFTgroupCard_x_$(aa1)),$(foreach aa3,$(NFTcardS_$(aa2)),\
$(call ip4inRule111,chLocalIp4input, iif $(aa3) $(NFTcnt) goto chLocalIp4Card_$(aa1)_11_checkDstIp) )))
$(call ip4inRule111,chLocalIp4input, $(NFTcnt) drop)


### _11_checkDstIp
$(foreach aa1,$(NFTgroupCard_x_Src)  ,$(foreach aa2,$(NFTgroupCard_y2_$(aa1)),\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_11_checkDstIp  ip daddr $(aa2) \
   $(NFTcnt) goto chLocalIp4Card_$(aa1)_13_checkSrcIp \
   )\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr 224.0.0.0/8 $(NFTcnt) drop)\
$(if $(NFTdebug),\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_11_checkDstIp  meta nftrace set 1) \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_11_checkDstIp  $(NFTcnt) drop \
)
$(foreach aa1,$(NFTgroupCard_x_Block),$(foreach aa2,$(NFTgroupCard_y2_$(aa1)),\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_11_checkDstIp  ip daddr $(aa2) \
   $(NFTcnt) goto chLocalIp4Card_$(aa1)_15_checkProtocol_tcp \
   )\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr 224.0.0.0/8 $(NFTcnt) drop)\
$(if $(NFTdebug),\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_11_checkDstIp  meta nftrace set 1) \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_11_checkDstIp  $(NFTcnt) drop \
)

### _13_checkSrcIp
$(foreach aa1,$(NFTgroupCard_x_Src)  ,$(foreach aa2,$(NFTgroupCard_y5_$(aa1)),\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_13_checkSrcIp ip saddr $(aa2) \
   $(NFTcnt) goto chLocalIp4Card_$(aa1)_15_checkProtocol_tcp \
   )\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_13_checkSrcIp  $(NFTcnt) drop \
)

# _15_checkProtocol_tcp --> _16_checkTcpDstPortNew , _17_checkProtocol_udp 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_15_checkProtocol_tcp ip protocol != tcp $(NFTcnt) goto chLocalIp4Card_$(aa1)_17_checkProtocol_udp \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_15_checkProtocol_tcp ct state { established } $(NFTcnt) accept \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_15_checkProtocol_tcp ct state { related     } $(NFTcnt) accept \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_15_checkProtocol_tcp ct state { new } $(NFTcnt) goto chLocalIp4Card_$(aa1)_16_checkTcpDstPortNew \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_15_checkProtocol_tcp $(NFTcnt) drop \
)
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_16_checkTcpDstPortNew $(NFTcnt) accept \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_16_checkTcpDstPortNew $(NFTcnt) drop \
)

# _17_checkProtocol_udp -> _18_checkUdpDstPort , _21_checkProtocol_icmp 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_17_checkProtocol_udp ip protocol != udp $(NFTcnt) goto chLocalIp4Card_$(aa1)_21_checkProtocol_icmp \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_17_checkProtocol_udp ct state { established } $(NFTcnt) accept \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_17_checkProtocol_udp ct state { related     } $(NFTcnt) accept \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_17_checkProtocol_udp ct state { new } $(NFTcnt) goto chLocalIp4Card_$(aa1)_18_checkUdpDstPort \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_17_checkProtocol_udp $(NFTcnt) drop \
)
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_18_checkUdpDstPort $(NFTcnt) accept \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_18_checkUdpDstPort $(NFTcnt) drop \
)

# _21_checkProtocol_icmp -> _23_unknown 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_21_checkProtocol_icmp ip protocol != icmp $(NFTcnt) goto chLocalIp4Card_$(aa1)_23_unknown \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_21_checkProtocol_icmp icmp type { echo-reply   } $(NFTcnt) accept \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_21_checkProtocol_icmp icmp type { echo-request } $(NFTcnt) accept \
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_21_checkProtocol_icmp $(NFTcnt) drop \
)

# _23_unknown  ->
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)_23_unknown $(NFTcnt) accept \
)

#### forward rule :
add rule ip tbLocalIpv4 chLocalIp4forward  $(NFTcnt) accept
#### output rule :
add rule ip tbLocalIpv4 chLocalIp4output   $(NFTcnt) accept

#### Nat rule :
add rule ip tbNatIpv4         chLocalIp4prerouting     $(NFTcnt) accept
add rule ip tbNatIpv4         chLocalIp4postrouting    $(NFTcnt) accept

endef
export nf31_TEXT

#$(nf31):=ws2 wv1
#nf31: $($(nf31))

nf31:=deal_with_local_machine_packages_ipv4
nf31:
	echo "$${nf31_TEXT}"                  >> $(NFTfile)
	@wc                                     $(NFTfile)

linuxNft_OpList+=		\
	nf31						\


