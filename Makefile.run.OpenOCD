all: 

CFGrunOpenocdINCset1:=\
	Makefile.3031.ise.path		\
	Makefile.3044.impact.gen_svf_for_run		\
	Makefile.3045.impact.gen_svf_for_burn_flash		\

CFGrunOpenocdINCset2:=$(foreach aa1,$(CFGrunOpenocdINCset1),$(TM)/$(aa1))

$(eval $(foreach aa2,$(CFGrunOpenocdINCset2),$(call tryINCmustExist,$(aa2),db8193912)))


OCDrunPATH?=openocd_run
OCDrunPATH:=$(shell realpath $(OCDrunPATH))
OCDbin:=$(OCDrunPATH)/bin
openocd:=$(OCDbin)/openocd

ifneq (11,$(shell [ -f $(openocd) ] && echo 11 || echo 22))
$(info )
$(info ' openocd , need a dir named "openocd_run" to place the openocd execute-program ')
$(info ' or , being defined in the Makefile.env ')
$(info )
$(error )
endif

define burn_basic
	LD_LIBRARY_PATH=/home/bootH/LogicAnalyzer/cyusb/cyusb_linux_1.0.4_64bit/lib \
					/home/bootH/LogicAnalyzer/cyusb/cyusb_linux_1.0.4_64bit/src/download_fx2 \
					-i usbjtag-basic.hex.portD.0x16C0.0x06AD.iic -t LI2C

	 /home/bootH/LogicAnalyzer/cyusb/fxload-2008_10_13/fxload -v \
		 -t fx2lp  \
		 -I /lib/firmware/ixo-usb-jtag/usbjtag-saxo_l.hex -D /dev/bus/usb/001/123

endef

$(if $(wildcard cfgOpenOCD),,$(shell ln -s $(TM)/cfgOpenOCD))
cfgOpenOCD:=$(wildcard cfgOpenOCD)

cfgLine1xilinx= \
				time \
				$(openocd)  \
				-f $(cfgOpenOCD)/ixo-usb-jtag-16c0-06ad.cfg \
				-f $(cfgOpenOCD)/promXCF04S.cfg \
				-f $(cfgOpenOCD)/xc3s500e.cfg

cfgLine2altera= \
				time \
				$(openocd)  \
				-f $(cfgOpenOCD)/altera-usb-blaster.cfg \
				-f $(cfgOpenOCD)/promXCF04S.cfg \
				-f $(cfgOpenOCD)/xc3s500e.cfg

load_openOCD_firmware:= \
				/home/bootH/LogicAnalyzer/cyusb/fxload-2008_10_13/fxload \
				-v -t fx2lp      \
				-I /home/bootH/Xilinx/ixo-usb-jtag/usbjtag-xpcu_x.hex  \
				-D /dev/bus/usb/001/122


define showRunHelpTEXText2

 1st : load the ixo-usb-jtag : usbjtag-xpcu_x.hex for XILINX platform cable usb DLC9G with fpga(outside flash)   
                            or usbjtag-xpcu_i.hex for XILINX platform cable usb DLC9G with cpld(inside  flash)   
$(load_openOCD_firmware)
  
  
2nd : then , use the openocd  
  
$(cfgLine1xilinx)  
$(cfgLine2altera)  
  
3rd : telnet 127.0.0.1 4444  
      jtag init 
      scan_chain 

4th : or , you can add "init", "svf XXX.svf", and "exit" into a file named cmd01.txt, then ,

$(cfgLine2altera)  \
	-f cmd01.txt
  
endef

OCDcfgList:=$(sort $(wildcard $(cfgOpenOCD)/*.cfg))
$(call genVimWithFileList,showSourceCodeTEXT,$(OCDcfgList),vv)

showRunHelpList +=svrUSAGE svbUSAGE


############ obr # begin #######
obrPara1?=svf.FPGA.run.svf
define obrTEXT1 

init 
svf $(obrPara1)
exit

endef
export obrTEXT1 

obr:=openocd_burn_fpga_for_run
obr:
	echo "$${obrTEXT1}" > tmp/obr01.txt
	$(cfgLine2altera)  -f tmp/obr01.txt

showRunHelpList +=obr 
############ obr # end #######

############ obf # begin #######
obfPara1?=svf.FPGA.flash.svf
define obfTEXT1 

init 
svf $(obfPara1)
exit

endef
export obfTEXT1 

obf:=openocd_burn_fpga_for_run
obf:
	echo "$${obfTEXT1}" > tmp/obf01.txt
	$(cfgLine2altera)  -f tmp/obf01.txt

showRunHelpList +=obf 
############ obf # end #######

