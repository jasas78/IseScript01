all:

#$(NFTbin)     
# NFtext_blockIpv6
# Makefile.5000
# Makefile.5001
# Makefile.5011
# Makefile.5013
# Makefile.5015

# NFTdebug:=

NFTnowTable:=tbLocalIpv4natPre

my_tbLocalIpv4_N1chainALL :=   \
_c1_N1checkSrcIp               \
_c3_N1checkDstIp               \
_c5_N1checkProtocol_tcp        \
_c7_N1checkTcpDstPortNew       \
_d1_N1checkProtocol_udp        \
_d3_N1checkUdpDstPort          \
_d5_N1checkProtocol_icmp       \
_d7_N1checkProtocol_igmp       \
_d9_N1unknown                  \
_da_N1snat01fakeAsFromVPN      \

define NFTtext_21_ipv4_natPre

# NFTtext_21_ipv4_natPre begin
add table ip $(NFTnowTable)         


# add my_tbLocalIpv4_N1chainALL : begin
$(foreach aa1,$(NFTgroupCard_x_ALL),\
  $(foreach aa2,$(my_tbLocalIpv4_N1chainALL),\
    $(EOL)add chain ip $(NFTnowTable) chLocalIp4Card_$(aa1)$(aa2)\
  )\
)

# add my_tbLocalIpv4_N1chainALL : end

add chain ip $(NFTnowTable) chLocalIp4natPre   { type nat hook prerouting  priority 0 ; policy accept ; }


$(if ,
  $(call ip4inRule111,chLocalIp4natPre, ip protocol == icmp ip daddr 114.114.114.114 $(NFTcnt)  $(NFTset_1), testICMP31) 
  $(call ip4inRule111,chLocalIp4natPre, ip protocol == icmp ip daddr 8.8.8.8         $(NFTcnt)  $(NFTset_1), testICMP32) 
  $(call ip4inRule111,chLocalIp4natPre, ip daddr 114.114.114.114 udp dport 53 $(NFTcnt)  $(NFTset_1), testICMP31) 
  $(call ip4inRule111,chLocalIp4natPre, ip daddr 8.8.8.8         udp dport 53 $(NFTcnt)  $(NFTset_1), testICMP32) 
  $(call ip4inRule111,chLocalIp4natPre, ip protocol == icmp ip saddr 114.114.114.114 $(NFTcnt)  $(NFTset_1), testICMP31) 
  $(call ip4inRule111,chLocalIp4natPre, ip protocol == icmp ip saddr 8.8.8.8         $(NFTcnt)  $(NFTset_1), testICMP32) 
  $(call ip4inRule111,chLocalIp4natPre, ip saddr 114.114.114.114 udp dport 53 $(NFTcnt)  $(NFTset_1), testICMP31) 
  $(call ip4inRule111,chLocalIp4natPre, ip saddr 8.8.8.8         udp dport 53 $(NFTcnt)  $(NFTset_1), testICMP32) 
)

### chLocalIp4nat : begin 

$(foreach aa1,$(NFTgroupCard_x_ALL),\
  $(foreach aa2,$(NFTgroupCard_x_$(aa1)),$(foreach aa3,$(NFTcardS_$(aa2)),\
    $(call ip4inRule111,chLocalIp4natPre   , iif $(aa3) $(NFTcnt) goto chLocalIp4Card_$(aa1)_c1_N1checkSrcIp ) \
  ))\
)
$(ccall ip4inRule111,chLocalIp4natPre  , $(NFTcnt) $(NFTset_1))
$(call ip4inRule111,chLocalIp4natPre  , $(NFTcnt) accept)
### chLocalIp4nat : end


### _c1_N1checkSrcIp
$(foreach aa1, lan vpn , \
  $(foreach aa2, $(NFTgroupCard_y5_$(aa1)),\
    $(call ip4inRuleAA1,_c1_N1checkSrcIp, ip saddr $(aa2) $(NFTcnt) goto chLocalIp4Card_$(aa1)_c3_N1checkDstIp) \
  )\
  $(foreach aa2, $(NFTnat_block_ip__blackHole) ,\
    $(call ip4inRuleAA1,_c1_N1checkSrcIp, ip saddr $(aa2) $(NFTcnt) drop, NFTnat_block_ip__blackHole )\
  )\
)

$(foreach aa1,lo, \
  $(foreach aa2, $(NFTgroupCard_y2_$(aa1)) ,\
    $(call ip4inRuleAA1,_c1_N1checkSrcIp, ip saddr $(aa2) $(NFTcnt) goto chLocalIp4Card_$(aa1)_c3_N1checkDstIp) \
  )\
  $(foreach aa2, $(NFTgroupCard_y5_lan) $(NFTgroupCard_y5_vpn),\
    $(call ip4inRuleAA1,_c1_N1checkSrcIp, ip saddr $(aa2) $(NFTcnt) goto chLocalIp4Card_$(aa1)_c3_N1checkDstIp) \
  )\
)

$(foreach aa1,$(NFTgroupCard_x_ALL), \
  $(if $(NFTdebug),$(call ip4inRuleAA1,_c1_N1checkSrcIp, $(NFTset_1),1) )\
  $(call ip4inRuleAA1,_c1_N1checkSrcIp, $(NFTcnt) drop, end... ) \
)


### _c3_N1checkDstIp
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
  $(foreach aa2,$(NFTgroupCard_y5_$(aa1)),\
    $(call ip4inRuleAA1,_c3_N1checkDstIp, ip daddr $(aa2) $(NFTcnt) goto chLocalIp4Card_$(aa1)_c5_N1checkProtocol_tcp) \
))

$(foreach aa1,$(NFTgroupCard_x_ALL), \
  $(foreach aa2,$(NFTnat_block_ip__ALL) ,\
    $(call ip4inRuleAA1,_c3_N1checkDstIp, ip daddr $(aa2) $(NFTcnt) drop, NFTnat_block_ip__ALL) \
))

$(foreach aa1,$(NFTgroupCard_x_ALL), \
  $(foreach aa2, $(foreach aa3,$(NFTgroupCard_x_ALL),$(NFTgroupCard_y4_$(aa3))), \
    $(call ip4inRuleAA1,_c3_N1checkDstIp, ip daddr $(aa2) $(NFTcnt) drop, block local boardcast ) \
))


$(foreach aa1,$(NFTgroupCard_x_ALL), \
  $(call ip4inRuleAA1,_c3_N1checkDstIp, $(NFTcnt) goto chLocalIp4Card_$(aa1)_c5_N1checkProtocol_tcp) \
  $(call ip4inRuleAA1,_c3_N1checkDstIp, $(NFTset_1),1) \
  $(call ip4inRuleAA1,_c3_N1checkDstIp, $(NFTcnt) drop,end...) \
)

# _c5_N1checkProtocol_tcp --> _c7_N1checkTcpDstPortNew , _d1_N1checkProtocol_udp 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_c5_N1checkProtocol_tcp, ip protocol != tcp $(NFTcnt) goto chLocalIp4Card_$(aa1)_d1_N1checkProtocol_udp) \
$(call ip4inRuleAA1,_c5_N1checkProtocol_tcp, ct state { established } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_c5_N1checkProtocol_tcp, ct state { related     } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_c5_N1checkProtocol_tcp, ct state { new } $(NFTcnt) goto chLocalIp4Card_$(aa1)_c7_N1checkTcpDstPortNew) \
$(call ip4inRuleAA1,_c5_N1checkProtocol_tcp, $(NFTcnt) drop) \
)

# _c7_N1checkTcpDstPortNew

$(foreach aa1, $(NFTgroupCard_x_ALL) ,\
  $(foreach aa2,$(call sortUN, $(NFTnat_block_tcpPort__ALL) ),\
    $(call ip4inRuleAA1,_c7_N1checkTcpDstPortNew, tcp dport $(aa2) $(NFTcnt) drop, NFTnat_block_tcpPort__ALL )  \
  )\
)

$(foreach aa1, $(NFTgroupCard_x_ALL) ,\
  $(foreach aa2,$(call sortUN, $(NFTtcpOUT_allow) $(NFTtcpIN_$(aa1))), \
    $(call ip4inRuleAA1,_c7_N1checkTcpDstPortNew, tcp dport $(aa2) $(NFTcnt) accept)  \
  )\
)

$(foreach aa1, lo  ,\
  $(call ip4inRuleAA1,_c7_N1checkTcpDstPortNew, $(NFTcnt) accept) \
)

$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
  $(call ip4inRuleAA1,_c7_N1checkTcpDstPortNew, $(NFTset_1),1) \
  $(call ip4inRuleAA1,_c7_N1checkTcpDstPortNew, $(NFTcnt) drop) \
)

# _d1_N1checkProtocol_udp -> _d3_N1checkUdpDstPort , _d5_N1checkProtocol_icmp 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_d1_N1checkProtocol_udp, ip protocol != udp $(NFTcnt) goto chLocalIp4Card_$(aa1)_d5_N1checkProtocol_icmp) \
$(call ip4inRuleAA1,_d1_N1checkProtocol_udp, ct state { established } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_d1_N1checkProtocol_udp, ct state { related     } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_d1_N1checkProtocol_udp, ct state { new } $(NFTcnt) goto chLocalIp4Card_$(aa1)_d3_N1checkUdpDstPort) \
$(call ip4inRuleAA1,_d1_N1checkProtocol_udp, $(NFTcnt) drop) \
)

# _d3_N1checkUdpDstPort
$(foreach aa1,$(NFTgroupCard_x_ALL),\
  $(foreach aa2,$(call sortUN,$(NFTudpOUT_allow) $(NFTudpIN_$(aa1)) ),\
    $(call ip4inRuleAA1,_d3_N1checkUdpDstPort, udp dport $(aa2) $(NFTcnt) accept #__$(aa1)__$(aa2)__1 )  \
  )\
)
$(foreach aa1,$(NFTgroupCard_x_ALL),\
  $(foreach aa2,$(call sortUN, $(NFTnat_block_udpPort__ALL) ),\
    $(call ip4inRuleAA1,_d3_N1checkUdpDstPort, udp dport $(aa2) $(NFTcnt) drop #__$(aa1)__$(aa2)__3 )  \
  )\
)

$(foreach aa1,lo ,\
    $(call ip4inRuleAA1,_d3_N1checkUdpDstPort, $(NFTcnt) accept #__$(aa1)__$(aa2)__5 )  \
)

$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
  $(call ip4inRuleAA1,_d3_N1checkUdpDstPort, $(NFTset_1),1) \
  $(call ip4inRuleAA1,_d3_N1checkUdpDstPort, $(NFTcnt) drop) \
)

# _d5_N1checkProtocol_icmp -> _d7_N1checkProtocol_igmp 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_d5_N1checkProtocol_icmp, ip protocol != icmp $(NFTcnt) goto chLocalIp4Card_$(aa1)_d7_N1checkProtocol_igmp) \
$(call ip4inRuleAA1,_d5_N1checkProtocol_icmp, icmp type { echo-reply   } $(NFTcnt) goto chLocalIp4Card_$(aa1)_da_N1snat01fakeAsFromVPN) \
$(call ip4inRuleAA1,_d5_N1checkProtocol_icmp, icmp type { echo-request } $(NFTcnt) goto chLocalIp4Card_$(aa1)_da_N1snat01fakeAsFromVPN) \
$(call ip4inRuleAA1,_d5_N1checkProtocol_icmp, icmp type { destination-unreachable } $(NFTcnt) drop) \
$(call ip4inRuleAA1,_d5_N1checkProtocol_icmp, $(NFTset_1),1) \
$(call ip4inRuleAA1,_d5_N1checkProtocol_icmp, $(NFTcnt) drop) \
)

# _d7_N1checkProtocol_igmp -> _d9_N1unknown 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_d7_N1checkProtocol_igmp, ip protocol != igmp $(NFTcnt) goto chLocalIp4Card_$(aa1)_d9_N1unknown) \
$(call ip4inRuleAA1,_d7_N1checkProtocol_igmp, ip daddr 224.0.0.22 $(NFTcnt) drop) \
$(call ip4inRuleAA1,_d7_N1checkProtocol_igmp, $(NFTset_1),1) \
$(call ip4inRuleAA1,_d7_N1checkProtocol_igmp, $(NFTcnt) drop) \
)

# _d9_N1unknown  ->
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_d9_N1unknown, $(NFTset_1),1) \
$(call ip4inRuleAA1,_d9_N1unknown, $(NFTcnt) accept) \
)

# _da_N1snat01fakeAsFromVPN  ->
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_da_N1snat01fakeAsFromVPN, $(NFTset_1), testSNAT12 ) \
$(call ip4inRuleAA1,_da_N1snat01fakeAsFromVPN, snat $(NFTnatIP), testSNAT13 ) \
$(call ip4inRuleAA1,_da_N1snat01fakeAsFromVPN, $(NFTcnt) accept) \
)

# NFTtext_21_ipv4_natPre end
endef
export NFTtext_21_ipv4_natPre:=$(NFTtext_21_ipv4_natPre)


