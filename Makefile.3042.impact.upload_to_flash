

ifeq (,$(strip $(RUNpath)))
$(error "you should define RUNpath and run again" )
endif

FNuufEXT0:=$(PROJname)_42_11_uuf
FNuufIn1:=$(FNparOut1)
FNuufLog1:=log_$(FNuufEXT0).txt
FNuufCmd1:=cmd_$(FNuufEXT0).txt
FNuufScr1:=scr_$(FNuufEXT0).scr



ifeq (,$(ufufuf))
ufufufX:=out/$(FNmcsOut1)
FNuufIn1:=$(shell realpath $(ufufufX) )
else
ufufufX:=out/$(ufufuf) $(TM)/$(ufufuf)
ifeq (,$(firstword $(wildcard $(ufufufX))))
$(info )
$(info 'file not found :$(ufufufX)' )
$(info )
$(error )
endif
FNuufIn1:=$(shell realpath $(firstword $(wildcard $(ufufufX) )))
endif

ifdef AnotherDST
AnotherDSTuf:=$(shell realpath $(AnotherDST))
else
AnotherDSTuf:=$(shell realpath $(FNuufIn1))
endif


define SCRuuf1
setMode -bscan
setCable -port auto
Identify -inferir 
identifyMPM 
assignFile -p 2 -file $(AnotherDSTuf)
setAttribute -position 2 -attr packageName -value ""
ReadIdcode -p 2 
Program -p 2 -e -v 
quit

endef
export SCRuuf1

ufo:=upload_to_flash_only
$(ufo):=Makefile.3042.impact.upload_to_flash
ufo :
	@echo out/$(FNuufLog1) > out/loging.txt
	@echo ;echo '---- $(uf) start --- out/$(FNuufLog1) --- burn into flash --->> $(AnotherDSTuf) ' ; echo
	@test -f $(AnotherDSTuf) 
	@echo "$${SCRuuf1}" > out/$(FNuufScr1)
	       cd tmp/ && $(LDso641) $(RUNpath)/impact -batch < ../out/$(FNuufScr1)  > ../out/$(FNuufLog1)
	echo  "cd tmp/ && $(LDso641) $(RUNpath)/impact -batch < ../out/$(FNuufScr1)  > ../out/$(FNuufLog1)" > out/$(FNuufCmd1)
	@grep Programming out/$(FNuufLog1)
uf:=impact_upload_to_flash_and_backup
uf : ufo 

showRunHelpList +=ufo uf

uf2:=$(uf)____use_the_$(FNmcsOut1).2.mcs
uf3:=$(uf)____use_the_$(FNmcsOut1).3.mcs
uf4:=$(uf)____use_the_$(FNmcsOut1).4.mcs
showRunHelpList +=uf2
showRunHelpList +=uf3
showRunHelpList +=uf4

uf2:
	make uf ufufuf=$(FNmcsOut1).2.mcs
uf3:
	make uf ufufuf=$(FNmcsOut1).3.mcs
uf4:
	make uf ufufuf=$(FNmcsOut1).4.mcs

