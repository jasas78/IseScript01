all:

$(if $(synopsysPATH),,$(error 'you should define the synopsysPATH and run again'))

# srcDeselectAll -win $$_nTrace1
# srcSelect -signal "rst" -win $$_nTrace1
# srcAddSelectedToWave -win $$_nTrace1
# srcDeselectAll -win $$_nTrace1
# srcSelect -signal "clk" -win $$_nTrace1
# srcAddSelectedToWave -win $$_nTrace1
# srcDeselectAll -win $$_nTrace1
# srcSelect -signal "c" -win $$_nTrace1
# srcAddSelectedToWave -win $$_nTrace1

define veridiPlay01

verdiSetPrefEnv -bDisplayWelcome "off"

verdiWindowWorkMode -win $$_Verdi_1 -hardwareDebug
srcSignalView -on

verdiWindowBeWindow -win $$_nWave2
wvResizeWindow -win $$_nWave2 20 28 1800 980




wvZoomAll -win $$_nWave2


endef
export veridiPlay01


cvv:=clean_verdi_tmp_file
cvv:
	rm -f 					\
		opendatabase.log 	\
		*.vcd 				\
		*.vcd.vpd 			\
		inter.vpd 			\
		command.log 		\
		verdi.fsdb			\
		novas_dump.log		\
		novas.conf			\
		novas.rc			\
		filelist.verdi.txt	\
		verdi.play0?.txt	\
		Simv simv ucli.key 
	rm -fr 					\
		work.lib++			\
		vericomLog			\
		verdiLog    		\
		DVEfiles 			\
		simv.daidir/ 		\
		csrc/

bv1:=synopsys_compile_Verdi_FSDB_database
bv1:
	@echo
	VERDI_HOME=$(VERDI_HOME) 			\
			   $(VERDI_HOME)/bin/vericom 	\
			   $${VERDIhdlList}
	@echo


tv1:=run_the_test_of_Verdi_FSDB
tv1:
	@echo
	rm -f ./verdi.fsdb && cp srcSIM/verdi.fsdb ./
	echo "$${veridiPlay01}" > verdi.play01.txt 
	VERDI_HOME=$(VERDI_HOME) 			\
			   $(VERDI_HOME)/bin/verdi 	\
			   -ssf verdi.fsdb  		\
			   -ba						\
			   -play verdi.play01.txt	\
			   -top $(VERDItop)
	@echo

tv9:=run_the_test_of_Verdi_FSDB
tv9:
	@echo
	rm -f ./verdi.fsdb && cp srcSIM/verdi.fsdb ./
	echo "$${VERDIhdlList}" |xargs -n 1 > filelist.verdi.txt 
	VERDI_HOME=$(VERDI_HOME) 			\
			   $(VERDI_HOME)/bin/verdi 	\
			   -ssf verdi.fsdb  		\
			   -f filelist.verdi.txt 
	@echo

wv1:=group_run_the_verdi1
$(wv1):=cvv bv1 tv1
wv1: $($(wv1))

synopsysVerdi_OpList:=		\
	cvv bv1 tv1 			\
	tv9 					\
	wv1						\

