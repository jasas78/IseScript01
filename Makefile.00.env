all:

showOptionList?=m h so gs gc

CFGmake11git:=$(wildcard $(TM)/Makefile.11.git)
ifndef CFGmake11git
$(error "173811 why      $(TM)/Makefile.11.git don't exist ?")
endif

so:=showOption
so $(so):
	@echo "$${showOptionTEXT}"

h := help 
h $(h) : showHelp
showHelp:
	@echo "$${showHelpTEXT}"

vim_Makefile:=kkk
m:=vim_Makefile
m $(m):
	vim Makefile

define EOL


endef

define showOptionTEXT

 $(foreach aa1,$(showOptionList), $(aa1)     ==>> $($(aa1)) $(if $($($(aa1))), ==>> $($($(aa1))))$(EOL))


endef
export showOptionTEXT

gs:
	git status
gc:
	git commit


all: showOption


















ifndef iSoriginDIR
#ifeq (,$(iSoriginDIR))


include Makefile.env.openocd
cfg_openocd1:=$(strip $(cfg_openocd1))
cfg_openocd2:=$(strip $(cfg_openocd2))
cfg_openocd3:=$(strip $(cfg_openocd3))

define show_help_example


usb-jtag.cfg
for example :
	use Platform Cable USB : 03fd:0008 Xilinx, Inc. Platform Cable USB II <<<--- select the usb-jtag.cfg 
    use XCF04S , then :                                                      select the xilinx-xcf-s.cfg 


endef
export show_help_example

ifeq (,$(cfg_openocd1))
$(error $(show_help_example))
endif
ifeq (,$(cfg_openocd2))
$(error $(show_help_example))
endif


DIR11:=$(TM)/openocd_cfg
DIR12:=$(TM)/openocd_run
DIR1x:= $(DIR11) $(DIR12)



CFG1:=$(firstword $(foreach aa1,$(DIR1x),$(shell find $(aa1)/ |grep $(cfg_openocd1)$$)))
CFG2:=$(firstword $(foreach aa1,$(DIR1x),$(shell find $(aa1)/ |grep $(cfg_openocd2)$$)))

RUNprog:=$(DIR02)/openocd_run/bin/openocd

define showHelpTEXT
	CFG1        $(CFG1)
	CFG2        $(CFG2)
	CFG3    	$(CFG3)
	RUNprog     $(RUNprog)

	$(RUNprog) \
		$(if $(wildcard $(CFG1)), -f $(CFG1)) \
		$(if $(wildcard $(CFG2)), -f $(CFG2)) \
		$(if $(wildcard $(CFG3)), -f $(CFG3)) \
		-c "$(RUNcmd)"

endef
export showHelpTEXT



	
he:=show_help_example
he $(he):
	@echo "$${show_help_example}"

endif
