all:

#$(NFTbin)     
# nf1_TEXT
# Makefile.5000
# Makefile.5001

NFTdebug:=111


my_tbLocalIpv4_chainALL :=   \
_11_checkDstIp               \
_13_checkSrcIp               \
_15_checkProtocol_tcp        \
_17_checkTcpDstPortNew       \
_21_checkProtocol_udp        \
_23_checkUdpDstPort          \
_25_checkProtocol_icmp       \
_29_unknown                  \

ip4inRuleAA1=$(EOL)add rule ip tbLocalIpv4 chLocalIp4Card_$(aa1)$(1) $(2)
ip4inRule111=$(EOL)add rule ip tbLocalIpv4                      $(1) $(2)


define NFTtext_11_ipv4_input

add table ip tbLocalIpv4         


# add my_tbLocalIpv4_chainALL : begin
$(foreach aa1,$(NFTgroupCard_x_ALL),\
$(foreach aa2,$(my_tbLocalIpv4_chainALL),\
$(EOL)add chain ip tbLocalIpv4 chLocalIp4Card_$(aa1)$(aa2)\
))

# add my_tbLocalIpv4_chainALL : end

add chain ip tbLocalIpv4 chLocalIp4input    { type filter hook input   priority 0 ; policy accept ; }


add chain ip tbLocalIpv4 chLocalIp4forward  { type filter hook forward priority 0 ; policy accept ; }
add chain ip tbLocalIpv4 chLocalIp4output   { type filter hook output  priority 0 ; policy accept ; }


add table ip tbNatIpv4         
add chain ip tbNatIpv4         chLocalIp4prerouting     { type filter hook prerouting    priority 0 ; policy accept ; }
add chain ip tbNatIpv4         chLocalIp4postrouting    { type filter hook postrouting   priority 0 ; policy accept ; }


### ruleS begin :

$(foreach aa1,$(NFTgroupCard_x_ALL),$(foreach aa2,$(NFTgroupCard_x_$(aa1)),$(foreach aa3,$(NFTcardS_$(aa2)),\
$(call ip4inRule111,chLocalIp4input, iif $(aa3) $(NFTcnt) goto chLocalIp4Card_$(aa1)_11_checkDstIp) \
)))
$(call ip4inRule111,chLocalIp4input, $(NFTcnt) drop)


### _11_checkDstIp
$(foreach aa1,$(NFTgroupCard_x_Src)  , $(foreach aa2,$(NFTgroupCard_y2_$(aa1)),\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr $(aa2) $(NFTcnt) goto chLocalIp4Card_$(aa1)_13_checkSrcIp) \
)\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr 224.0.0.0/8 $(NFTcnt) drop)\
                                       $(foreach aa2,$(NFTgroupCard_x_$(aa1)),$(foreach aa3,$(NFTcardS_$(aa2)),$(if $(NetCard_ip4_$(aa3)),\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr $(NetCard_ip4_$(aa3)) ip saddr $(NetCard_ip1_$(aa3)) ip protocol udp $(NFTcnt) accept)\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr 255.255.255.255       ip saddr $(NetCard_ip1_$(aa3)) ip protocol udp $(NFTcnt) accept)\
)))\
                    $(if $(filter lo,$(aa1)),$(foreach aa2,$(NFTgroupCard_y2_lan) $(NFTgroupCard_y2_vpn),\
$(call ip4inRuleAA1,_11_checkDstIp, iif lo ip saddr $(aa2) ip saddr $(aa2) $(NFTcnt) accept)\
))\
                    $(if $(filter lo,$(aa1)),,\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr 255.255.255.255       $(NFTcnt) drop)\
)\
$(if $(NFTdebug),$(call ip4inRuleAA1,_11_checkDstIp, meta nftrace set 1) )\
$(call ip4inRuleAA1,_11_checkDstIp, $(NFTcnt) drop) \
)

$(foreach aa1,$(NFTgroupCard_x_Block), $(foreach aa2,$(NFTgroupCard_y2_$(aa1)),\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr $(aa2) $(NFTcnt) goto chLocalIp4Card_$(aa1)_15_checkProtocol_tcp) \
)\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr 224.0.0.0/8 $(NFTcnt) drop)\
                                       $(foreach aa2,$(NFTgroupCard_x_$(aa1)),$(foreach aa3,$(NFTcardS_$(aa2)),$(if $(NetCard_ip4_$(aa3)),\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr $(NetCard_ip4_$(aa3)) ip saddr $(NetCard_ip1_$(aa3)) ip protocol udp $(NFTcnt) accept)\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr 255.255.255.255       ip saddr $(NetCard_ip1_$(aa3)) ip protocol udp $(NFTcnt) accept)\
)))\
$(call ip4inRuleAA1,_11_checkDstIp, ip daddr 255.255.255.255       $(NFTcnt) drop)\
$(if $(NFTdebug), $(call ip4inRuleAA1,_11_checkDstIp, meta nftrace set 1) )\
$(call ip4inRuleAA1,_11_checkDstIp, $(NFTcnt) drop) \
)

### _13_checkSrcIp
$(foreach aa1,$(NFTgroupCard_x_Src)  ,$(foreach aa2,$(NFTgroupCard_y5_$(aa1)),\
$(call ip4inRuleAA1,_13_checkSrcIp, ip saddr $(aa2) $(NFTcnt) goto chLocalIp4Card_$(aa1)_15_checkProtocol_tcp) \
   )\
$(call ip4inRuleAA1,_13_checkSrcIp, $(NFTcnt) drop) \
)

# _15_checkProtocol_tcp --> _17_checkTcpDstPortNew , _21_checkProtocol_udp 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_15_checkProtocol_tcp, ip protocol != tcp $(NFTcnt) goto chLocalIp4Card_$(aa1)_21_checkProtocol_udp) \
$(call ip4inRuleAA1,_15_checkProtocol_tcp, ct state { established } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_15_checkProtocol_tcp, ct state { related     } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_15_checkProtocol_tcp, ct state { new } $(NFTcnt) goto chLocalIp4Card_$(aa1)_17_checkTcpDstPortNew) \
$(call ip4inRuleAA1,_15_checkProtocol_tcp, $(NFTcnt) drop) \
)

# _17_checkTcpDstPortNew
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
  $(if $(filter lo,$(aa1)),\
    $(call ip4inRuleAA1,_17_checkTcpDstPortNew, $(NFTcnt) accept) ,\
    $(foreach aa2,$(NFtcpIN_$(aa1))  ,\
      $(call ip4inRuleAA1,_17_checkTcpDstPortNew, tcp dport $(aa2) $(NFTcnt) accept)  \
    )\
  )\
  $(call ip4inRuleAA1,_17_checkTcpDstPortNew, $(NFTcnt) drop) \
)

# _21_checkProtocol_udp -> _23_checkUdpDstPort , _25_checkProtocol_icmp 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_21_checkProtocol_udp, ip protocol != udp $(NFTcnt) goto chLocalIp4Card_$(aa1)_25_checkProtocol_icmp) \
$(call ip4inRuleAA1,_21_checkProtocol_udp, ct state { established } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_21_checkProtocol_udp, ct state { related     } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_21_checkProtocol_udp, ct state { new } $(NFTcnt) goto chLocalIp4Card_$(aa1)_23_checkUdpDstPort) \
$(call ip4inRuleAA1,_21_checkProtocol_udp, $(NFTcnt) drop) \
)

# _23_checkUdpDstPort
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
	$(foreach aa2,$(NFudpIN_$(aa1))  ,\
	  $(call ip4inRuleAA1,_23_checkUdpDstPort, udp dport $(aa2) $(NFTcnt) accept #__$(aa1)__$(aa2)__)  \
	)\
	$(if $(filter lo,$(aa1)),\
	  $(if $(NFTdebug),$(call ip4inRuleAA1,_23_checkUdpDstPort, meta nftrace set 1) )\
	  $(call ip4inRuleAA1,_23_checkUdpDstPort, $(NFTcnt) accept #__$(aa1)__) ,\
      $(call ip4inRuleAA1,_23_checkUdpDstPort, $(NFTcnt) drop) \
	)
)

# _25_checkProtocol_icmp -> _29_unknown 
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_25_checkProtocol_icmp, ip protocol != icmp $(NFTcnt) goto chLocalIp4Card_$(aa1)_29_unknown) \
$(call ip4inRuleAA1,_25_checkProtocol_icmp, icmp type { echo-reply   } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_25_checkProtocol_icmp, icmp type { echo-request } $(NFTcnt) accept) \
$(call ip4inRuleAA1,_25_checkProtocol_icmp, $(NFTcnt) drop) \
)

# _29_unknown  ->
$(foreach aa1,$(NFTgroupCard_x_ALL)  ,\
$(call ip4inRuleAA1,_29_unknown, $(NFTcnt) accept) \
)

#### forward rule :
$(call ip4inRule111,chLocalIp4forward, $(NFTcnt) accept)
#### output rule :
$(call ip4inRule111,chLocalIp4output, $(NFTcnt) accept)

#### Nat rule :
add rule ip tbNatIpv4         chLocalIp4prerouting     $(NFTcnt) accept
add rule ip tbNatIpv4         chLocalIp4postrouting    $(NFTcnt) accept

endef

nf31_TEXT:=\
	$(NFTtext_11_ipv4_input) \

export nf31_TEXT

nf31:=deal_with_local_machine_packages_ipv4
nf31:
	echo "$${nf31_TEXT}"  $(NFTsed1)     >> $(NFTfile)
	@wc                                     $(NFTfile)

linuxNft_OpList+=		\
	nf31						\


